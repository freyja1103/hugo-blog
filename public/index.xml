<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>logwion</title>
    <link>https://freyja1103.github.io/</link>
    <description>Recent content on logwion</description>
    <generator>Hugo</generator>
    <language>ja-JP</language>
    <lastBuildDate>Mon, 31 Mar 2025 19:38:48 +0900</lastBuildDate>
    <atom:link href="https://freyja1103.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Github Actions &#43; Github CLIでコメントを更新する</title>
      <link>https://freyja1103.github.io/posts/actions-upsert-comment/</link>
      <pubDate>Mon, 31 Mar 2025 19:38:48 +0900</pubDate>
      <guid>https://freyja1103.github.io/posts/actions-upsert-comment/</guid>
      <description>&lt;p&gt;Github Actions でコメントを更新する方法として、&#xA;&lt;a href=&#34;https://github.com/marocchino/sticky-pull-request-comment&#34;&gt;marocchino/sticky-pull-request-comment&lt;/a&gt;を使う方法があります。&#xA;が、Github CLI を使えば自前でできるのでそのメモ&#xA;（ちょっとめんどくさいけど）&lt;/p&gt;&#xA;&lt;h3 id=&#34;仕組み&#34;&gt;仕組み&lt;/h3&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;update したいコメントに invisible な footer を仕込む&lt;/li&gt;&#xA;&lt;li&gt;仕込んだ footer を探す&lt;/li&gt;&#xA;&lt;li&gt;あれば更新&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;p&gt;みたいな感じです。&lt;/p&gt;&#xA;&lt;p&gt;雰囲気: &lt;a href=&#34;https://github.com/freyja1103/ci-upsert-comment/pull/1&#34;&gt;https://github.com/freyja1103/ci-upsert-comment/pull/1&lt;/a&gt;&lt;/p&gt;&#xA;&lt;h4 id=&#34;コメントをさがす&#34;&gt;コメントをさがす&lt;/h4&gt;&#xA;&lt;p&gt;gh api repos/repoName/issues/number/comments で JSON を拾いつつ、jq でいい感じにフィルタリングする&lt;/p&gt;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;select だけだと存在しない場合に空の配列が代入されるので&lt;code&gt;map() | first // &amp;quot;&amp;quot;&lt;/code&gt;で空文字にする&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-yaml&#34; data-lang=&#34;yaml&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;- &lt;span style=&#34;color:#f92672&#34;&gt;name&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;Find existing comment&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;id&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;existing_comment&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;run&lt;/span&gt;: |&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        COMMENT_ID=$(gh api repos/${{ github.repository }}/issues/${{ github.event.pull_request.number }}/comments | jq -r --arg footer &amp;#34;$FOOTER&amp;#34; &amp;#39;map(select(.body | contains($footer)) | .id) | first // &amp;#34;&amp;#34;&amp;#39; | head -n1)&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        if [[ -n &amp;#34;$COMMENT_ID&amp;#34; ]]; then&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        echo &amp;#34;COMMENT_ID=$COMMENT_ID&amp;#34; &amp;gt;&amp;gt; $GITHUB_ENV&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        fi&lt;/span&gt;&#xA;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;コメントを更新する&#34;&gt;コメントを更新する&lt;/h3&gt;&#xA;&lt;p&gt;空文字でなければ PATCH で更新&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
